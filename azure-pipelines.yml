pool:
  vmImage: ubuntu-18.04

variables:
  REPO_NAME: pyspline
  DOCKER_WORKING_DIR: /home/mdolabuser/repos/$REPO_NAME
  DOCKER_MOUNT_DIR: /home/mdolabuser/travis/$REPO_NAME

  DOCKER_TAG: u18-gcc-ompi-stable



jobs:
- job:
  container:
    image: mdolab/public:u18-gcc-ompi-stable
    options: -u 0

  steps:
  - script: docker run -t -d --name app --mount "type=bind,src=$(pwd),target=$DOCKER_MOUNT_DIR" mdolab/public:$DOCKER_TAG /bin/bash
  # We thrown away the existing repo in Docker, and copy the new one in-place
  - script: docker exec -it app /bin/bash -c "rm -rf $DOCKER_WORKING_DIR && cp -r $DOCKER_MOUNT_DIR $DOCKER_WORKING_DIR"
  - script: docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && cp config/defaults/config.LINUX_GFORTRAN.mk config/config.mk && make";
  - script: docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && pip install ."
  - script: docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && testflo . -v"
  - script: docker rm -f app
  workspace:
    clean: all
