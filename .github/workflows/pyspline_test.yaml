name: pyspline_test

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Before install
      - run: docker pull mdolab/public:$DOCKER_TAG
      - run: docker run -t -d --name app --mount "type=bind,src=$(pwd),target=$DOCKER_MOUNT_DIR" mdolab/public:$DOCKER_TAG /bin/bash
      # Install
      - run: docker exec app /bin/bash -c "rm -rf $DOCKER_WORKING_DIR && cp -r $DOCKER_MOUNT_DIR $DOCKER_WORKING_DIR"
      - run: docker exec app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && ls -a && cp config/defaults/config.LINUX_GFORTRAN.mk config/config.mk && make";

      - run: docker exec app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && pip install ."
      # Script
      - run: docker exec app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && testflo . -v"
      # env:
        #DOCKER_TAGc: 7-gcc-ompi-latest
        #DOCKER_TAG: c7-intel-impi-latest
        #DOCKER_TAG: u18-gcc-ompi-latest
        #DOCKER_TAG: u18-gcc-ompi-stable
        #DOCKER_TAG: u20-gcc-ompi-latest
        #DOCKER_TAG: u20-gcc-ompi-stable
      # After Script
      - run: docker rm -f app

      env:
        REPO_NAME: pyspline
        DOCKER_WORKING_DIR: /home/mdolabuser/repos/$REPO_NAME
        DOCKER_MOUNT_DIR: /home/mdolabuser/travis/$REPO_NAME
        DOCKER_TAG: u18-gcc-ompi-stable